# task 1

     -1    12           | - 24 * 12 + 2 * 3 + 6 |         | - 276 | 
X = A   *  2  =  1/30 * | 3 * 12 + (-6) * 2 + 3 | = 1/30* | 27    |
           1            | 16*12 + 3*2  - 4      |         | 194   |
           
# task 2

r(A) < r(H) => система несовместна.

import numpy as np

A = np.array([[1, 2, -1],[3, -4, 0],[8, -5, 2], [2, -5, 0], [11, 4, -7]])
B = np.array([1, 7, 12, 7, 15])
print(np.linalg.lstsq(A, B))

[ 1.15601029, -0.889718  , -0.85029782]

# task 3

r(A) < r(H) => система несовместна.

] a11 = 0 => r(A) = r(H)

По формуле Крамера :

A = np.array([[0, 2, 3],[4, 5, 6],[7, 8, 9]])
H = np.array([[0, 2, 3, 12],[4, 5, 6, 2],[7, 8, 9, 1]])
A1 = np.array([[12, 2, 3],[2, 5, 6],[1, 8, 9]])
A2 = np.array([[0, 12, 3],[4, 2, 6],[7, 1, 9]])
A3 = np.array([[0, 2, 12],[4, 5, 2],[7, 8, 1]])
x1 = np.linalg.det(A1)/np.linalg.det(A)
x2 = np.linalg.det(A2)/np.linalg.det(A)
x3 = np.linalg.det(A3)/np.linalg.det(A)
[-8.999999999999982
14.000000000000014
-5.333333333333337]

# task 4

import scipy.linalg
import numpy as np

A = np.array([[1, 2, 3], [2, 16, 21], [4, 28, 73]])
P, L, U = scipy.linalg.lu(A)
print(P)
print(L)
print(U)

print(np.dot(P, A))
print(np.dot(L, U))
B = np.array([1, 1, 1])
Y = np.linalg.solve(L, np.dot(P, B))
L1 = np.linalg.solve(U, Y)
print(L1)

[[0. 1. 0.]
 [0. 0. 1.]
 [1. 0. 0.]]
[[ 1.    0.    0.  ]
 [ 0.25  1.    0.  ]
 [ 0.5  -0.4   1.  ]]
[[  4.    28.    73.  ]
 [  0.    -5.   -15.25]
 [  0.     0.   -21.6 ]]
[[ 2. 16. 21.]
 [ 4. 28. 73.]
 [ 1.  2.  3.]]
[[ 4. 28. 73.]
 [ 1.  2.  3.]
 [ 2. 16. 21.]]
[ 1.18518519 -0.03703704 -0.03703704]

# task 5

import numpy as np
import  matplotlib.pyplot as plt

x = np.linspace(-100, 100, 1000)
y = 10 * x - 14
z = x + 2*y - 1

def Q(x, y, z):
    return (x**2 + y**2 + z**2)

plt.xlabel('x')
plt.ylabel('Q')
plt.plot(x, Q(x, y, z))

plt.show()

# Q является параболой вида Ax2 + Bx + c с минимумом в точке -b/2a.
# численно решается следующим образом

A = np.array([[1, 2, -1], [8, -5, 2]])
B = np.array([1, 12])
print(np.linalg.lstsq(A, B))
[ 1.38191882, -0.18081181,  0.0202952 ]

# task 6

import numpy as np

A = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
B = np.array([2, 5, 11])
print(np.linalg.det(A))
Q,R = np.linalg.qr(A)
R1 = R[:2, :2]
print(R1)
B1 = np.dot(np.transpose(Q), B)[:2]
print(B1)
print(np.linalg.solve(R1, B1))

[1.50000000e+00 3.92767275e-15]
